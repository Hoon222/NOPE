while True:
    try:
        now = datetime.datetime.now()
        start_time = get_start_time("KRW-XRP") + datetime.timedelta(minutes=30)
        end_time = start_time + datetime.timedelta(days=1)

        last_df = pyupbit.get_ohlcv(interval="day", count=2)
        last_low = last_df.iloc[0]['low']

        schedule.run_pending()
        
        #오전 9시30분 < 현재 < 오전 8시 50분 에만 작동
        if start_time < now < end_time - datetime.timedelta(minutes=40):
            target_price = get_target_price("KRW-XRP", 0.2)
            ma50 = get_ma50("KRW-XRP")
            current_price = get_current_price("KRW-XRP")

                               #목표가격 < 현재가격 + 50일 이평선 < AI예측가격 보다 클 경우                                  
            if target_price < current_price and ma50 < predicted_close_price:  
                 krw = get_balance("KRW")        
                 if krw > 5000:
                 #리플 매수
                  buy_result = upbit.buy_market_order("KRW-XRP", krw*0.9995)
                  post_message(myToken,"#hooncoin", "XRP buy : " +str(buy_result))   
                  # 현재가격이 예측가격보다 클경우 
        else:   
            if current_price > predicted_close_price:             
               xrp = get_balance("XRP")
            if xrp > 0.00008:
                # 리플매도
                  sell_result = upbit.sell_market_order("KRW-XRP", xrp*0.9995)
                  post_message(myToken,"#hooncoin", "XRP buy : " +str(sell_result))
             
             #오전 8시 50분 리플 일괄매도 
            if start_time > now > end_time - datetime.timedelta(seconds=10):
                xrp = get_balance("XRP")  
                if xrp > 0.00008:
                 sell_result = upbit.sell_market_order("KRW-XRP", xrp*0.9995)
                post_message(myToken,"#hooncoin", "XRP buy : " +str(sell_result))    
        time.sleep(1)
    except Exception as e:
        print(e)
        post_message(myToken,"#hooncoin", e)
        time.sleep(1)
